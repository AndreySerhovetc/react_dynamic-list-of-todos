{"version":3,"sources":["api/api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["request","url","fetch","then","response","ok","Error","statusText","json","getUser","userId","TodoList","state","todos","query","filterBy","handelChange","event","setState","target","value","handelSelectChange","prepareTodos","visibleTodos","filter","todo","title","toLowerCase","includes","completed","a","this","props","onSelectedId","selectedUserId","className","type","onChange","placeholder","map","classNames","readOnly","checked","onClick","id","React","Component","CurrentUser","user","loadUser","prevProps","name","email","phone","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4ca9411.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\nconst request = (url: string) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const getTodos = () => request('/todos');\n\nexport const getUser = (userId: number) => {\n  return request(`/users/${userId}`);\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getTodos } from '../../api/api';\nimport './TodoList.scss';\n\ntype Props = {\n  selectedUserId: number;\n  onSelectedId: (userId: number) => void;\n};\ntype State = {\n  userId: number;\n  todos: [] | Todo[];\n  query: string;\n  filterBy: string;\n};\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    userId: 0,\n    todos: [],\n    query: '',\n    filterBy: '',\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos });\n  }\n\n  handelChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ query: event.target.value });\n  };\n\n  handelSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ filterBy: event.target.value });\n  };\n\n  prepareTodos = () => {\n    const { todos, query, filterBy } = this.state;\n    let visibleTodos = todos.filter(todo => (\n      todo.title.toLowerCase().includes(query.toLowerCase())\n    ));\n\n    if (filterBy) {\n      visibleTodos = visibleTodos.filter(todo => {\n        switch (filterBy) {\n          case 'all':\n            return todo;\n          case 'active':\n            return !todo.completed;\n          case 'completed':\n            return todo.completed;\n          default:\n            return 0;\n        }\n      });\n    }\n\n    return visibleTodos;\n  };\n\n  render() {\n    const { userId, query, filterBy } = this.state;\n    const { onSelectedId, selectedUserId } = this.props;\n    const visibleTodos = this.prepareTodos();\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={(event) => (\n            this.handelChange(event)\n          )}\n          placeholder=\"Find your task\"\n        />\n        <select\n          className=\"form-select mb-3 mt-3\"\n          value={filterBy}\n          onChange={(event => (\n            this.handelSelectChange(event)\n          ))}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {visibleTodos.map(todo => (\n              <li\n                className={classNames(\n                  'TodoList__item',\n                  {\n                    'TodoList__item--unchecked': !todo.completed,\n                    'TodoList__item--checked': todo.completed,\n                  },\n                )}\n                key={todo.id}\n              >\n                <label>\n                  <input\n                    className=\"form-control\"\n                    type=\"checkbox\"\n                    readOnly\n                    checked={todo.completed}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={classNames(\n                    'TodoList__user-button button',\n                    {\n                      'TodoList__user-button--selected button': todo.userId === selectedUserId,\n                    },\n                  )}\n                  type=\"button\"\n                  value={userId}\n                  onClick={() => (\n                    onSelectedId(todo.userId)\n                  )}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { getUser } from '../../api/api';\nimport './CurrentUser.scss';\n\ninterface Props {\n  selectedUserId: number;\n}\n\ntype State = {\n  user: User | null;\n};\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  async componentDidMount() {\n    this.loadUser();\n  }\n\n  async componentDidUpdate(prevProps: Props) {\n    if (prevProps.selectedUserId !== this.props.selectedUserId) {\n      this.loadUser();\n    }\n  }\n\n  loadUser = async () => {\n    const { selectedUserId } = this.props;\n    const user = await getUser(selectedUserId);\n\n    this.setState({ user });\n  };\n\n  render() {\n    const { user } = this.state;\n\n    if (!user) {\n      return (\n        <div className=\"CurrentUser\">\n          <span>User not found</span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${user.id}`}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\ninterface State {\n  selectedUserId: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n  };\n\n  onSelectedId = (userId: number) => {\n    this.setState({ selectedUserId: userId });\n  };\n\n  render() {\n    const { selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            onSelectedId={this.onSelectedId}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser selectedUserId={selectedUserId} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}